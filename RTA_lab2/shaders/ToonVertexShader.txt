#version 330

in vec3 vertex_position;
in vec3 vertex_normal;

out vec3 LightIntensity;

vec3 LightPosition = vec3 (5.0, 3.0, 0.0); // Light position in world coords.
vec3 lightColor = vec3(1.0, 1.0, 1.0);

uniform vec3 color;
uniform vec3 cameraPos;
uniform mat4 view;
uniform mat4 proj;
uniform mat4 model;

vec3 FragPos = vec3(model * vec4(vertex_position,1.0));
vec3 norm = normalize(mat3(transpose(inverse(model)))*vertex_normal);
vec3 lightDir = normalize(LightPosition-FragPos);
float intensity = dot(lightDir,norm);

void main(){
    if (intensity > 0.9)
		intensity = 1.0f;
	else if (intensity > 0.5)
		intensity = 0.6f;
	else if (intensity > 0.25)
		intensity = 0.4f;
	else
		intensity = 0.2f;
	LightIntensity = intensity*color;
    // Convert position to clip coordinates and pass along
    gl_Position =  proj * view * model * (vec4(vertex_position,1.0));
}

